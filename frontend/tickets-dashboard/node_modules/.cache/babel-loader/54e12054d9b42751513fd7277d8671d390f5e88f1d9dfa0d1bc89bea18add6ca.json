{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Nokia\\\\tickets-dashboard\\\\src\\\\components\\\\TicketStatusPieChart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function TicketStatusPieChart({\n  data\n}) {\n  if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-gray-400\",\n    children: \"Nu exist\\u0103 date pentru grafic.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 42\n  }, this);\n  const colors = [\"#3B82F6\",\n  // Blue - Open\n  \"#F59E0B\",\n  // Amber - In Progress\n  \"#10B981\",\n  // Green - Resolved\n  \"#EF4444\",\n  // Red - Closed\n  \"#8B5CF6\",\n  // Violet - Pending\n  \"#EC4899\" // Pink - Rejected\n  ];\n  const labels = data.map(item => item.status || \"Necunoscut\");\n  const counts = data.map(item => item.count);\n  const backgroundColors = labels.map((label, index) => colors[index % colors.length]);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: \"Nr Tickete\",\n      data: counts,\n      backgroundColor: backgroundColors,\n      borderColor: \"#ffffff\",\n      borderWidth: 2\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        position: \"bottom\",\n        labels: {\n          color: \"#374151\",\n          // text color\n          padding: 20\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = TicketStatusPieChart;\nvar _c;\n$RefreshReg$(_c, \"TicketStatusPieChart\");","map":{"version":3,"names":["Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","TicketStatusPieChart","data","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colors","labels","map","item","status","counts","count","backgroundColors","label","index","chartData","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","position","color","padding","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/Nokia/tickets-dashboard/src/components/TicketStatusPieChart.js"],"sourcesContent":["import { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport default function TicketStatusPieChart({ data }) {\r\n  if (!data || data.length === 0) return <p className=\"text-gray-400\">Nu existÄƒ date pentru grafic.</p>;\r\n\r\n  const colors = [\r\n    \"#3B82F6\", // Blue - Open\r\n    \"#F59E0B\", // Amber - In Progress\r\n    \"#10B981\", // Green - Resolved\r\n    \"#EF4444\", // Red - Closed\r\n    \"#8B5CF6\", // Violet - Pending\r\n    \"#EC4899\", // Pink - Rejected\r\n  ];\r\n\r\n  const labels = data.map((item) => item.status || \"Necunoscut\");\r\n  const counts = data.map((item) => item.count);\r\n\r\n  const backgroundColors = labels.map((label, index) => colors[index % colors.length]);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Nr Tickete\",\r\n        data: counts,\r\n        backgroundColor: backgroundColors,\r\n        borderColor: \"#ffffff\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          color: \"#374151\", // text color\r\n          padding: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Pie data={chartData} options={options} />;\r\n}\r\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzEL,OAAO,CAACM,QAAQ,CAACL,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,eAAe,SAASI,oBAAoBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACrD,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,oBAAOJ,OAAA;IAAGK,SAAS,EAAC,eAAe;IAAAC,QAAA,EAAC;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErG,MAAMC,MAAM,GAAG,CACb,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACZ;EAED,MAAMC,MAAM,GAAGT,IAAI,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,IAAI,YAAY,CAAC;EAC9D,MAAMC,MAAM,GAAGb,IAAI,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,CAAC;EAE7C,MAAMC,gBAAgB,GAAGN,MAAM,CAACC,GAAG,CAAC,CAACM,KAAK,EAAEC,KAAK,KAAKT,MAAM,CAACS,KAAK,GAAGT,MAAM,CAACP,MAAM,CAAC,CAAC;EAEpF,MAAMiB,SAAS,GAAG;IAChBT,MAAM;IACNU,QAAQ,EAAE,CACR;MACEH,KAAK,EAAE,YAAY;MACnBhB,IAAI,EAAEa,MAAM;MACZO,eAAe,EAAEL,gBAAgB;MACjCM,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,QAAQ;QAClBjB,MAAM,EAAE;UACNkB,KAAK,EAAE,SAAS;UAAE;UAClBC,OAAO,EAAE;QACX;MACF;IACF;EACF,CAAC;EAED,oBAAO/B,OAAA,CAACP,GAAG;IAACU,IAAI,EAAEkB,SAAU;IAACK,OAAO,EAAEA;EAAQ;IAAAnB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD;AAACsB,EAAA,GA3CuB9B,oBAAoB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}