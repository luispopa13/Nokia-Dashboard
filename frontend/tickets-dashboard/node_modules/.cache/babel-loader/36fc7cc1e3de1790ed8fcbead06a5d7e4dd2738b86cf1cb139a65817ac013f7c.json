{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\Nokia\\\\tickets-dashboard\\\\src\\\\components\\\\TicketStatusPieChart.js\";\nimport { PieChart as RechartsPieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend } from \"recharts\";\n\n// pick a distinct color per status\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  Open: \"#3182ce\",\n  \"In Progress\": \"#dd6b20\",\n  Pending: \"#d69e2e\",\n  Closed: \"#38a169\",\n  Resolved: \"#805ad5\"\n};\nexport default function TicketStatusPieChart({\n  data = [],\n  height = 420\n}) {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: height,\n    children: /*#__PURE__*/_jsxDEV(RechartsPieChart, {\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        dataKey: \"count\",\n        nameKey: \"status\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 120 // <-- mai mare decât 80\n        ,\n        label: ({\n          name,\n          percent\n        }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n        children: data.map(entry => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[entry.status] || \"#718096\"\n        }, entry.status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: (value, name) => [value, name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        layout: \"horizontal\",\n        verticalAlign: \"bottom\",\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = TicketStatusPieChart;\nvar _c;\n$RefreshReg$(_c, \"TicketStatusPieChart\");","map":{"version":3,"names":["PieChart","RechartsPieChart","Pie","Cell","Tooltip","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","COLORS","Open","Pending","Closed","Resolved","TicketStatusPieChart","data","height","width","children","margin","top","right","bottom","left","dataKey","nameKey","cx","cy","outerRadius","label","name","percent","toFixed","map","entry","fill","status","fileName","_jsxFileName","lineNumber","columnNumber","formatter","value","layout","verticalAlign","align","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/Nokia/tickets-dashboard/src/components/TicketStatusPieChart.js"],"sourcesContent":["import {\r\n  PieChart as RechartsPieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Legend\r\n} from \"recharts\";\r\n\r\n// pick a distinct color per status\r\nconst COLORS = {\r\n  Open: \"#3182ce\",\r\n  \"In Progress\": \"#dd6b20\",\r\n  Pending: \"#d69e2e\",\r\n  Closed: \"#38a169\",\r\n  Resolved: \"#805ad5\",\r\n};\r\n\r\nexport default function TicketStatusPieChart({ data = [], height = 420 }) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={height}>\r\n      <RechartsPieChart\r\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\r\n      >\r\n        <Pie\r\n          data={data}\r\n          dataKey=\"count\"\r\n          nameKey=\"status\"\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          outerRadius={120} // <-- mai mare decât 80\r\n          label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n        >\r\n          {data.map((entry) => (\r\n            <Cell\r\n              key={entry.status}\r\n              fill={COLORS[entry.status] || \"#718096\"}\r\n            />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip formatter={(value, name) => [value, name]} />\r\n        <Legend layout=\"horizontal\" verticalAlign=\"bottom\" align=\"center\" /> {/* <-- adăugat */}\r\n      </RechartsPieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SACEA,QAAQ,IAAIC,gBAAgB,EAC5BC,GAAG,EACHC,IAAI,EACJC,OAAO,EACPC,mBAAmB,EACnBC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE,SAAS;EACf,aAAa,EAAE,SAAS;EACxBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,oBAAoBA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,MAAM,GAAG;AAAI,CAAC,EAAE;EACxE,oBACER,OAAA,CAACH,mBAAmB;IAACY,KAAK,EAAC,MAAM;IAACD,MAAM,EAAEA,MAAO;IAAAE,QAAA,eAC/CV,OAAA,CAACP,gBAAgB;MACfkB,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAL,QAAA,gBAErDV,OAAA,CAACN,GAAG;QACFa,IAAI,EAAEA,IAAK;QACXS,OAAO,EAAC,OAAO;QACfC,OAAO,EAAC,QAAQ;QAChBC,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,WAAW,EAAE,GAAI,CAAC;QAAA;QAClBC,KAAK,EAAEA,CAAC;UAAEC,IAAI;UAAEC;QAAQ,CAAC,KAAK,GAAGD,IAAI,KAAK,CAACC,OAAO,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAI;QAAAd,QAAA,EAEvEH,IAAI,CAACkB,GAAG,CAAEC,KAAK,iBACd1B,OAAA,CAACL,IAAI;UAEHgC,IAAI,EAAE1B,MAAM,CAACyB,KAAK,CAACE,MAAM,CAAC,IAAI;QAAU,GADnCF,KAAK,CAACE,MAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA,CAACJ,OAAO;QAACqC,SAAS,EAAEA,CAACC,KAAK,EAAEZ,IAAI,KAAK,CAACY,KAAK,EAAEZ,IAAI;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDhC,OAAA,CAACF,MAAM;QAACqC,MAAM,EAAC,YAAY;QAACC,aAAa,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAE1B;AAACM,EAAA,GA3BuBhC,oBAAoB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}